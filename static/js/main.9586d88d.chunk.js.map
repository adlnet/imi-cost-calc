{"version":3,"sources":["components/TrainingType/CMI/index.js","components/TrainingType/CAI/index.js","components/TrainingType/Live/index.js","components/TrainingType/Fields/index.js","containers/CostCalculator/index.js","App.js","serviceWorker.js","index.js"],"names":["CMI","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","objectSpread","shared","cmi","costPerIMIHour","TADLPContractCost","devCostPerLearner","GARLaborRate","GARTime","GARCost","GARCostPerLearner","FY14ALMSCost","FTFieldingCost","workingData","calculations","finishedIMIHours","learnerTargetAudience","contractIMIHours","contentPackages","ImplementationCostPerLearner","TotalCost","TotalCostPerLearner","classes","calcAndSetData","react_default","a","createElement","react","Typography_default","variant","gutterBottom","Divider_default","className","divider","Grid_default","container","spacing","item","xs","Card_default","card","CardContent_default","addieTitle","addieA","join","varient","addieD1","addieD2","Table_default","TableBody_default","TableRow_default","TableCell_default","numberCell","toFixed","toString","replace","addieI","addieE","addieT","total","big","numeric","Component","withStyles","theme","marginTop","unit","marginBottom","minHeight","paddingBottom","borderBottom","borderColor","fontWeight","fontSize","textAlign","CAI","cai","totalTDYCost","instPer25Students","instTeaching40weeks1","instTeaching40weeks2","instTDY3Years","instAnnualCost","learnerTDYCost","instCostPerAnnualLearner","costOneClassroom","loadedAnnualInstructorCost","learnerCostPerDay","TDYDays","classroomsRequired","implementationCostPerLearner","totalCost","Math","round","Live","live","TDYCostPerDay","root","padding","width","paper","textField","selectedTraining","selected","TextField_default","type","id","fullWidth","label","onChange","onChanged","value","courseLength","CostCalculator","handleFieldChange","e","target","split","IDNum","setState","defineProperty","state","handleTrainingType","_this2","TrainingType_CMI","TrainingType_CAI","TrainingType_Live","Paper_default","InputProps","startAdornment","InputAdornment_default","position","RadioGroup_default","name","row","FormControlLabel_default","control","Radio_default","TrainingType_Fields","App","CssBaseline_default","AppBar_default","Toolbar_default","style","color","containers_CostCalculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9586d88d.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    divider: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n    },\r\n    card: { \r\n        minHeight: '350px'\r\n    },\r\n    addieTitle: {\r\n        paddingBottom: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        borderBottom: '3px solid #4e89eb'\r\n    },\r\n    addieA: {\r\n        borderColor: '#4dabf5'\r\n    },\r\n    addieD1: {\r\n        borderColor: '#5393ff'\r\n    },\r\n    addieD2: {\r\n        borderColor: '#2196f3'\r\n    },\r\n    addieI: {\r\n        borderColor: '#2979ff'\r\n    },\r\n    addieE: {\r\n        borderColor: '#1769aa'\r\n    },\r\n    addieT: {\r\n        borderColor: '#ff5722'\r\n    },\r\n    total: {\r\n        fontWeight: 'bold'\r\n    },\r\n    big: {\r\n        fontSize: '1rem'\r\n    },\r\n    numberCell: {\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nclass CMI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = {\r\n            ...this.props.data.shared,\r\n            ...this.props.data.cmi,\r\n            costPerIMIHour: 25000,\r\n            TADLPContractCost: 0,\r\n            devCostPerLearner: 0,\r\n            GARLaborRate: 18.03,\r\n            GARTime: 0,\r\n            GARCost: 0,\r\n            GARCostPerLearner: 0,\r\n            FY14ALMSCost: 1.86,\r\n            FTFieldingCost: 0\r\n        }\r\n    }\r\n\r\n    calcAndSetData() {\r\n        let workingData = { ...this.data, ...this.props.data.shared, ...this.props.data.cmi };\r\n\r\n        let calculations = {\r\n            TADLPContractCost: workingData.finishedIMIHours * workingData.costPerIMIHour,\r\n            devCostPerLearner: (workingData.finishedIMIHours * workingData.costPerIMIHour) / workingData.learnerTargetAudience,\r\n            GARTime: workingData.contractIMIHours * 1.6,\r\n            GARCost: (workingData.contractIMIHours * 1.6) * workingData.GARLaborRate,\r\n            GARCostPerLearner: ((workingData.contractIMIHours * 1.6) * workingData.GARLaborRate) / workingData.learnerTargetAudience,\r\n            FTFieldingCost: workingData.FY14ALMSCost * workingData.contentPackages,\r\n            ImplementationCostPerLearner: (workingData.FY14ALMSCost * workingData.contentPackages) / workingData.learnerTargetAudience,\r\n            TotalCost: \r\n                (workingData.finishedIMIHours * workingData.costPerIMIHour) \r\n                + (workingData.contractIMIHours * 1.6) * workingData.GARLaborRate,\r\n            TotalCostPerLearner: \r\n                ((workingData.finishedIMIHours * workingData.costPerIMIHour) / workingData.learnerTargetAudience) \r\n                + (((workingData.contractIMIHours * 1.6) * workingData.GARLaborRate) / workingData.learnerTargetAudience) \r\n                + ((workingData.FY14ALMSCost * workingData.contentPackages) / workingData.learnerTargetAudience)\r\n        }\r\n\r\n        this.data = { ...workingData, ...calculations }        \r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props;\r\n        \r\n        this.calcAndSetData();\r\n        return (\r\n            <Fragment>\r\n                <Typography variant=\"h4\" gutterBottom>Computer-Managed Instruction (CMI)</Typography>\r\n                <Typography variant=\"body1\"gutterBottom>Distance learning. Content is auto-scoring, and the learner interacts with content with no instructor or classroom.</Typography>\r\n\r\n                <Divider className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" gutterBottom>Costs by ADDIE Stage</Typography>\r\n\r\n                <Grid container spacing={8}>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieA].join(\" \")}>\r\n                                    Analysis\r\n                                </Typography>\r\n                                <Typography varient=\"body1\">\r\n                                    Costs are fixed. Activities include job analysis and other tasks performed by an ISD without the need for automated tools.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieD1].join(\" \")}>\r\n                                    Design\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    Costs are fixed. Activies include design of TLOs, ELOs, sequencing, etc., done during TDC.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieD2].join(\" \")}>\r\n                                    Development\r\n                                </Typography>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>Finished IMI Hours</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{this.data.finishedIMIHours}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Cost per IMI Hour</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.costPerIMIHour.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Learner Target Audience Throughput</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{this.data.learnerTargetAudience.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>TADLP Contract Cost</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.TADLPContractCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Development Cost Per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.devCostPerLearner.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieI].join(\" \")}>\r\n                                    Implementation\r\n                                </Typography>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>Impl. Br. GAR Labor Rate</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.GARLaborRate}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>IMI Hours</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{this.data.contractIMIHours}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Hours to Complete GAR</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{this.data.GARTime.toFixed(0)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>GAR Cost</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.GARCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>GAR Cost per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.GARCostPerLearner.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>ALMS Cost per Training Unit</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.FY14ALMSCost}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Content Packages</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{this.data.contentPackages}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>FT and Fielding Cost per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.FTFieldingCost.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Implementation Cost per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.ImplementationCostPerLearner.toFixed(4)}</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieE].join(\" \")}>\r\n                                    Evaluation\r\n                                </Typography>\r\n                                <Typography variant=\"body1\"gutterBottom>NOTE: Figures not yet implemented.</Typography>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>Army Training Help Desk (ATHD)</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>ATHD RightNow License Cost (for all Agents)</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>TKT Hours</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>DL DATR Costs</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Evaluation Cost per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent> \r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieT].join(\" \")}>\r\n                                    Totals\r\n                                </Typography>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell className={[classes.total, classes.big].join(\" \")}>\r\n                                                Total Cost\r\n                                            </TableCell>\r\n                                            <TableCell numeric className={[classes.numberCell, classes.total, classes.big].join(\" \")}>\r\n                                                ${this.data.TotalCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell className={classes.total}>\r\n                                                Total Cost per Learner\r\n                                            </TableCell>\r\n                                            <TableCell numeric className={[classes.total, classes.numberCell].join(\" \")}>\r\n                                                ${this.data.TotalCostPerLearner.toFixed(2)}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell className={classes.total}>\r\n                                                Total Cost per Learner if Rebuilt after 3 Years\r\n                                            </TableCell>\r\n                                            <TableCell numeric className={[classes.total, classes.numberCell].join(\" \")}>\r\n                                                ${(this.data.TotalCostPerLearner * 2).toFixed(2)}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CMI);\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    divider: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n    },\r\n    card: { \r\n        minHeight: '350px'\r\n    },\r\n    addieTitle: {\r\n        paddingBottom: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        borderBottom: '3px solid #4e89eb'\r\n    },\r\n    addieA: {\r\n        borderColor: '#4dabf5'\r\n    },\r\n    addieD1: {\r\n        borderColor: '#5393ff'\r\n    },\r\n    addieD2: {\r\n        borderColor: '#2196f3'\r\n    },\r\n    addieI: {\r\n        borderColor: '#2979ff'\r\n    },\r\n    addieE: {\r\n        borderColor: '#1769aa'\r\n    },\r\n    addieT: {\r\n        borderColor: '#ff5722'\r\n    },\r\n    total: {\r\n        fontWeight: 'bold'\r\n    },\r\n    big: {\r\n        fontSize: '1rem'\r\n    },\r\n    numberCell: {\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nclass CAI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = {\r\n            ...this.props.data.shared,\r\n            ...this.props.data.cai,\r\n            totalTDYCost: 0,\r\n            instPer25Students: 0,\r\n            instTeaching40weeks1: 0,\r\n            instTeaching40weeks2: 0,\r\n            instTDY3Years: 0,\r\n            instAnnualCost: 0,\r\n            learnerTDYCost: 0,\r\n            instCostPerAnnualLearner: 0,\r\n            costOneClassroom: 0,\r\n        };\r\n    }\r\n\r\n    calcAndSetData() {\r\n        let workingData = { ...this.data, ...this.props.data.shared, ...this.props.data.cai };\r\n\r\n        let calculations = {\r\n            instPer25Students: workingData.learnerTargetAudience / 25,\r\n            instTeaching40weeks1: (workingData.learnerTargetAudience / 25) / 20,\r\n            instTeaching40weeks2: (workingData.learnerTargetAudience / 25) / 40,\r\n            instTDY3Years: ((workingData.learnerTargetAudience / 25) / 20) / 3,\r\n            instAnnualCost: (((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost,\r\n            instCostPerAnnualLearner: \r\n                ((((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost) \r\n                / workingData.learnerTargetAudience / 3,\r\n            costOneClassroom: workingData.learnerCostPerDay * workingData.TDYDays * workingData.classroomsRequired,\r\n            implementationCostPerLearner: \r\n                workingData.learnerTDYCost\r\n                + (((((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost) \r\n                    / workingData.learnerTargetAudience / 3)\r\n                + (workingData.learnerCostPerDay * workingData.TDYDays * workingData.classroomsRequired),\r\n            totalCost: \r\n                ((((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost)\r\n                + (workingData.learnerTargetAudience * workingData.learnerTDYCost)\r\n        }\r\n        \r\n        this.data = { ...workingData, ...calculations }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        this.calcAndSetData();\r\n        return (\r\n            <Fragment>\r\n                <Typography variant=\"h4\" gutterBottom>Computer-Assisted Instruction (CAI)</Typography>\r\n                <Typography variant=\"body1\"gutterBottom>Distributed learning. Content is scored by an instructor, and the learner and instructor are in different classrooms.</Typography>\r\n                <Divider className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" gutterBottom>Costs by ADDIE Stage</Typography>\r\n\r\n                <Grid container spacing={8}>\r\n                    <Grid item xs={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieA].join(\" \")}>\r\n                                        Analysis\r\n                                    </Typography>\r\n                                    <Typography varient=\"body1\">\r\n                                        Costs are fixed. Activities include job analysis and other tasks performed by an ISD without the need for automated tools.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieD1].join(\" \")}>\r\n                                        Design\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        Costs are fixed. Activies include design of TLOs, ELOs, sequencing, etc., done during TDC.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieD2].join(\" \")}>\r\n                                        Development\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        Instructor Content Hour (ICU) and Non-Instruction Content Hour (NICH) costs not computed.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieI].join(\" \")}>\r\n                                        Implementation\r\n                                    </Typography>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            <TableRow>\r\n                                                <TableCell>Total Learner TDY Cost for Target Audience</TableCell>\r\n                                                <TableCell className={classes.numberCell}>${this.data.totalTDYCost.toFixed(2)}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell># Instructors Required for Every 25 Students</TableCell>\r\n                                                <TableCell className={classes.numberCell}>{Math.round(this.data.instPer25Students).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell># Instructors Teaching 40 Weeks a Year (20 2-week classes)</TableCell>\r\n                                                <TableCell className={classes.numberCell}>{Math.round(this.data.instTeaching40weeks1).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell># Instructors Teaching 40 Weeks a Year (40 1-week classes)</TableCell>\r\n                                                <TableCell className={classes.numberCell}>{Math.round(this.data.instTeaching40weeks2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell># Instructors Needed for TDY Course if Spread Across 3 Years</TableCell>\r\n                                                <TableCell className={classes.numberCell}>{Math.round(this.data.instTDY3Years).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell>Instructor Cost Annually</TableCell>\r\n                                                <TableCell className={classes.numberCell}>${this.data.instAnnualCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell>Learner TDY Cost per TDY</TableCell>\r\n                                                <TableCell className={classes.numberCell}>${this.data.learnerTDYCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell>Cost Per Annual Student for Instructor</TableCell>\r\n                                                <TableCell className={classes.numberCell}>${this.data.instCostPerAnnualLearner.toFixed(2)}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell>Cost of One Classroom Per Learner Per Course</TableCell>\r\n                                                <TableCell className={classes.numberCell}>${this.data.costOneClassroom.toFixed(2)}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow>\r\n                                                <TableCell>Implementation Cost Per Learner</TableCell>\r\n                                                <TableCell className={classes.numberCell}>${this.data.implementationCostPerLearner.toFixed(2)}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieE].join(\" \")}>\r\n                                        Evaluation\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\"gutterBottom>NOTE: Figures not yet implemented.</Typography>\r\n                                    <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>Army Training Help Desk (ATHD)</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>ATHD RightNow License Cost (for all Agents)</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>TKT Hours</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Evaluation Cost per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>-</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieT].join(\" \")}>\r\n                                        Totals\r\n                                    </Typography>\r\n                                    <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell className={[classes.total, classes.big].join(\" \")}>\r\n                                                Total Cost\r\n                                            </TableCell>\r\n                                            <TableCell numeric className={[classes.numberCell, classes.total, classes.big].join(\" \")}>\r\n                                                ${this.data.totalCost.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell className={classes.total}>\r\n                                                Total Cost per Learner\r\n                                            </TableCell>\r\n                                            <TableCell numeric className={[classes.numberCell, classes.total].join(\" \")}>\r\n                                                ${this.data.implementationCostPerLearner.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CAI);","import React, { Component, Fragment } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    divider: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n    },\r\n    card: { \r\n        minHeight: '350px'\r\n    },\r\n    addieTitle: {\r\n        paddingBottom: theme.spacing.unit,\r\n        marginBottom: theme.spacing.unit,\r\n        borderBottom: '3px solid #4e89eb'\r\n    },\r\n    addieA: {\r\n        borderColor: '#4dabf5'\r\n    },\r\n    addieD1: {\r\n        borderColor: '#5393ff'\r\n    },\r\n    addieD2: {\r\n        borderColor: '#2196f3'\r\n    },\r\n    addieI: {\r\n        borderColor: '#2979ff'\r\n    },\r\n    addieE: {\r\n        borderColor: '#1769aa'\r\n    },\r\n    addieT: {\r\n        borderColor: '#ff5722'\r\n    },\r\n    total: {\r\n        fontWeight: 'bold'\r\n    },\r\n    big: {\r\n        fontSize: '1rem'\r\n    },\r\n    numberCell: {\r\n        textAlign: 'right'\r\n    }\r\n})\r\n\r\nclass Live extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = {\r\n            ...this.props.data.shared,\r\n            ...this.props.data.live,\r\n            totalTDYCost: 0,\r\n            instPer25Students: 0,\r\n            instTeaching40weeks1: 0,\r\n            instTeaching40weeks2: 0,\r\n            instTDY3Years: 0,\r\n            instAnnualCost: 0,\r\n            learnerTDYCost: 0,\r\n            instCostPerAnnualLearner: 0,\r\n            costOneClassroom: 0,\r\n        };\r\n    }\r\n\r\n    calcAndSetData() {\r\n        let workingData = { ...this.data, ...this.props.data.shared, ...this.props.data.live };\r\n\r\n        let calculations = {\r\n            totalTDYCost: workingData.learnerTargetAudience * workingData.learnerTDYCost,\r\n            instPer25Students: workingData.learnerTargetAudience / 25,\r\n            instTeaching40weeks1: (workingData.learnerTargetAudience / 25) / 20,\r\n            instTeaching40weeks2: (workingData.learnerTargetAudience / 25) / 40,\r\n            instTDY3Years: ((workingData.learnerTargetAudience / 25) / 20) / 3,\r\n            instAnnualCost: (((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost,\r\n            learnerTDYCost: workingData.TDYDays * workingData.TDYCostPerDay,\r\n            instCostPerAnnualLearner: \r\n                ((((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost) \r\n                / workingData.learnerTargetAudience / 3,\r\n            costOneClassroom: workingData.learnerCostPerDay * workingData.TDYDays * workingData.classroomsRequired,\r\n            implementationCostPerLearner: \r\n                (workingData.TDYDays * workingData.TDYCostPerDay)\r\n                + (((((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost) \r\n                    / workingData.learnerTargetAudience / 3)\r\n                + (workingData.learnerCostPerDay * workingData.TDYDays * workingData.classroomsRequired),\r\n            totalCost: \r\n                ((((workingData.learnerTargetAudience / 25) / 20) / 3) * workingData.loadedAnnualInstructorCost)\r\n                + (workingData.learnerTargetAudience * (workingData.TDYDays * workingData.TDYCostPerDay))\r\n        }\r\n        \r\n        this.data = { ...workingData, ...calculations }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        this.calcAndSetData();\r\n        return (\r\n            <Fragment>\r\n                <Typography variant=\"h4\" gutterBottom>Live Instruction</Typography>\r\n                <Typography variant=\"body1\"gutterBottom>Resident learning. Content is scored by an instructor, and the learner and instructor are in the same classroom.</Typography>\r\n\r\n                <Divider className={classes.divider}/>\r\n\r\n                <Typography variant=\"h5\" gutterBottom>Costs by ADDIE Stage</Typography>\r\n\r\n                <Grid container spacing={8}>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieA].join(\" \")}>\r\n                                    Analysis\r\n                                </Typography>\r\n                                <Typography varient=\"body1\">\r\n                                    Costs are fixed. Activities include job analysis and other tasks performed by an ISD without the need for automated tools.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieD1].join(\" \")}>\r\n                                    Design\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    Costs are fixed. Activies include design of TLOs, ELOs, sequencing, etc., done during TDC.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieD2].join(\" \")}>\r\n                                    Development\r\n                                </Typography>\r\n                                <Typography variant=\"body1\">\r\n                                    Instructor Content Hour (ICU) and Non-Instruction Content Hour (NICH) costs not computed.\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieI].join(\" \")}>\r\n                                    Implementation\r\n                                </Typography>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        <TableRow>\r\n                                            <TableCell>Total Learner TDY Cost for Target Audience</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.totalTDYCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell># Instructors Required for Every 25 Students</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{Math.round(this.data.instPer25Students).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell># Instructors Teaching 40 Weeks a Year (20 2-week classes)</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{Math.round(this.data.instTeaching40weeks1).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell># Instructors Teaching 40 Weeks a Year (40 1-week classes)</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{Math.round(this.data.instTeaching40weeks2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell># Instructors Needed for TDY Course if Spread Across 3 Years</TableCell>\r\n                                            <TableCell className={classes.numberCell}>{Math.round(this.data.instTDY3Years).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Instructor Cost Annually</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.instAnnualCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Learner TDY Cost per TDY</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.learnerTDYCost.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Cost Per Annual Student for Instructor</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.instCostPerAnnualLearner.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Cost of One Classroom Per Learner Per Course</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.costOneClassroom.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                        <TableRow>\r\n                                            <TableCell>Implementation Cost Per Learner</TableCell>\r\n                                            <TableCell className={classes.numberCell}>${this.data.implementationCostPerLearner.toFixed(2)}</TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieE].join(\" \")}>\r\n                                    Evaluation\r\n                                </Typography>\r\n                                <Typography variant=\"body1\"gutterBottom>NOTE: Figures not yet implemented.</Typography>\r\n                                <Table>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell>Army Training Help Desk (ATHD)</TableCell>\r\n                                        <TableCell className={classes.numberCell}>-</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>ATHD RightNow License Cost (for all Agents)</TableCell>\r\n                                        <TableCell className={classes.numberCell}>-</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>TKT Hours</TableCell>\r\n                                        <TableCell className={classes.numberCell}>-</TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell>Evaluation Cost per Learner</TableCell>\r\n                                        <TableCell className={classes.numberCell}>-</TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" className={[classes.addieTitle, classes.addieT].join(\" \")}>\r\n                                    Totals\r\n                                </Typography>\r\n                                <Table>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell className={[classes.total, classes.big].join(\" \")}>\r\n                                            Total Cost\r\n                                        </TableCell>\r\n                                        <TableCell numeric className={[classes.numberCell, classes.total, classes.big].join(\" \")}>\r\n                                            ${this.data.totalCost.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell className={classes.total}>\r\n                                            Total Cost per Learner\r\n                                        </TableCell>\r\n                                        <TableCell numeric className={[classes.numberCell, classes.total].join(\" \")}>\r\n                                            ${this.data.implementationCostPerLearner.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Live);","import React, { Fragment } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: theme.spacing.unit * 2,\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    textField: {\r\n        marginBottom: theme.spacing.unit\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n    }\r\n})\r\n\r\nfunction Fields(props) {\r\n    const {classes} = props;\r\n    let selectedTraining = null;\r\n    switch(props.data.selected) {\r\n        case 'cmi':\r\n            selectedTraining = \r\n                <Fragment>\r\n                    <TextField \r\n                        type=\"number\" id=\"cmi-finishedIMIHours\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Finished IMI Hours\"\r\n                        onChange={props.onChanged} value={props.data.cmi.finishedIMIHours} />\r\n                    <TextField \r\n                        type=\"number\" id=\"cmi-contractIMIHours\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Contract IMI Hours\"\r\n                        onChange={props.onChanged} value={props.data.cmi.contractIMIHours} />\r\n                    <TextField \r\n                        type=\"number\" id=\"cmi-contentPackages\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Content Packages\"\r\n                        onChange={props.onChanged} value={props.data.cmi.contentPackages} />\r\n                </Fragment>\r\n            break;\r\n        case 'cai':\r\n            selectedTraining = \r\n                <Fragment>\r\n                    <TextField\r\n                        type=\"number\" id=\"cai-courseLength\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Length of Course (Hours)\"\r\n                        onChange={props.onChanged} value={props.data.cai.courseLength} />\r\n                    <TextField\r\n                        type=\"number\" id=\"cai-TDYDays\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"TDY Days\"\r\n                        onChange={props.onChanged} value={props.data.cai.TDYDays} />\r\n                    <TextField\r\n                        type=\"number\" id=\"cai-classroomsRequired\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Classrooms Required\"\r\n                        onChange={props.onChanged} value={props.data.cai.classroomsRequired} />\r\n                </Fragment>\r\n            break;\r\n        case 'live':\r\n            selectedTraining =\r\n                <Fragment>\r\n                    <TextField\r\n                        type=\"number\" id=\"live-courseLength\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Length of Course (Hours)\"\r\n                        onChange={props.onChanged} value={props.data.live.courseLength} />\r\n                    <TextField\r\n                        type=\"number\" id=\"live-TDYDays\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"TDY Days\"\r\n                        onChange={props.onChanged} value={props.data.live.TDYDays} />\r\n                    <TextField\r\n                        type=\"number\" id=\"live-classroomsRequired\" fullWidth\r\n                        className={classes.textField}\r\n                        label=\"Classrooms Required\"\r\n                        onChange={props.onChanged} value={props.data.live.classroomsRequired} />\r\n                </Fragment>\r\n            break;\r\n        default:\r\n            selectedTraining = null;\r\n            break;\r\n    }\r\n    return selectedTraining;\r\n}\r\n\r\nexport default withStyles(styles)(Fields);","import React, { Component } from 'react';\r\nimport CMI from '../../components/TrainingType/CMI';\r\nimport CAI from '../../components/TrainingType/CAI';\r\nimport Live from '../../components/TrainingType/Live';\r\nimport Fields from '../../components/TrainingType/Fields';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: theme.spacing.unit * 2,\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing.unit * 2\r\n    },\r\n    textField: {\r\n        marginBottom: theme.spacing.unit\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginBottom: theme.spacing.unit * 2\r\n    }\r\n})\r\n\r\nclass CostCalculator extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selected: null,\r\n            shared : {\r\n                learnerCostPerDay: 1.61,\r\n                loadedAnnualInstructorCost: 100000,\r\n                TDYCostPerDay: 100,\r\n                learnerTargetAudience: 600000,\r\n            },\r\n            cmi: {\r\n                finishedIMIHours: 0,\r\n                contractIMIHours: 0,\r\n                contentPackages: 0\r\n            },\r\n            cai: {\r\n                courseLength: 0,\r\n                TDYDays: 0,\r\n                classroomsRequired: 0\r\n            },\r\n            live: {\r\n                courseLength: 0,\r\n                TDYDays: 0,\r\n                classroomsRequired: 0\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFieldChange = (e) => {\r\n        let type = e.target.id.split('-')[0];\r\n        const IDNum = e.target.id.split('-')[1];\r\n        this.setState({\r\n            [type]: {\r\n                ...this.state[type],\r\n                [IDNum]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleTrainingType = (e) => {\r\n        this.setState({\r\n            selected: e.target.value\r\n        })\r\n    }\r\n    \r\n    render () {\r\n        const { classes }  = this.props;\r\n        let selectedTraining = null;\r\n        switch (this.state.selected) {\r\n            case 'cmi':\r\n                selectedTraining = <CMI data={this.state} onChanged={(data) => this.handleFieldChange} />\r\n                break;\r\n            case 'cai':\r\n                selectedTraining = <CAI data={this.state} onChanged={(data) => this.handleFieldChange} />\r\n                break;\r\n            case 'live':\r\n                selectedTraining = <Live data={this.state} onChanged={(data) => this.handleFieldChange} />\r\n                break;\r\n            default:\r\n                selectedTraining = <Typography variant=\"body1\">Enter shared field values and select a method of instruction in the panel to the left.</Typography>;\r\n                break;\r\n        }\r\n        \r\n        return (\r\n            <Grid container spacing={8} className={classes.root}>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography variant=\"h5\" gutterBottom>Shared Data</Typography>\r\n                        <Typography variant=\"body1\"gutterBottom>Enter shared data values in the fields below:</Typography>\r\n\r\n                        <TextField \r\n                            type=\"number\" id=\"shared-learnerCostPerDay\" fullWidth\r\n                            className={classes.textField}\r\n                            label=\"Classroom cost per day per learner\"\r\n                            onChange={this.handleFieldChange} value={this.state.shared.learnerCostPerDay} \r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\r\n                              }}/>\r\n\r\n                        <TextField \r\n                            type=\"number\" id=\"shared-loadedAnnualInstructorCost\" fullWidth\r\n                            className={classes.textField}\r\n                            label=\"Loaded annual cost for each instructor\"\r\n                            onChange={this.handleFieldChange} value={this.state.shared.loadedAnnualInstructorCost}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\r\n                              }}/>\r\n\r\n                        <TextField \r\n                            type=\"number\" id=\"shared-TDYCostPerDay\" fullWidth\r\n                            className={classes.textField}\r\n                            label=\"TDY cost per day for each learner\"\r\n                            onChange={this.handleFieldChange} value={this.state.shared.TDYCostPerDay}\r\n                            InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\r\n                              }} />\r\n\r\n                        <TextField \r\n                            type=\"number\" id=\"shared-learnerTargetAudience\" fullWidth\r\n                            className={classes.textField}\r\n                            label=\"Total Learner Target Audience Throughput\"\r\n                            onChange={this.handleFieldChange} value={this.state.shared.learnerTargetAudience} />\r\n\r\n                        <Divider className={classes.divider}/>\r\n\r\n                        <Typography variant=\"h5\" gutterBottom>IMI Method of Instruction Data</Typography>\r\n                        <Typography variant=\"body1\"gutterBottom>Select a method of instruction and enter values in the fields below:</Typography>\r\n                        <RadioGroup\r\n                            name=\"training-type\"\r\n                            value={this.state.selected}\r\n                            onChange={this.handleTrainingType}\r\n                            row>\r\n                              <FormControlLabel value=\"cmi\" control={<Radio />} label=\"CMI\"/>\r\n                              <FormControlLabel value=\"cai\" control={<Radio />} label=\"CAI\"/>\r\n                              <FormControlLabel value=\"live\" control={<Radio />} label=\"Live\"/>\r\n                        </RadioGroup>\r\n\r\n                        <Fields data={this.state} onChanged={this.handleFieldChange}/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <Paper className={classes.paper}>\r\n                        {selectedTraining}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CostCalculator);","import React, { Component, Fragment } from 'react';\n\nimport CostCalculator from './containers/CostCalculator';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <CssBaseline/>\n        <AppBar position=\"static\">\n          <ToolBar>\n            <Typography variant=\"h4\" style={{color: 'white'}}>\n              IMI Method of Instruction Cost Calculator\n            </Typography>\n          </ToolBar>\n        </AppBar>\n        <CostCalculator/>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}